CREATE TABLE statementMetadataQueue(
    statement_id UUID,
    bank_name LowCardinality(String),
    author String CODEC(ZSTD(1)),
    producer String CODEC(ZSTD(1)),
    creator String CODEC(ZSTD(1)),
    creation_date Nullable(DateTime64),
    modification_date Nullable(DateTime64),
    pdf_format_creation_date String CODEC(ZSTD(1)),
    pdf_format_modification_date String CODEC(ZSTD(1)),
    fonts Array(String),
    encryption_algo LowCardinality(String),
    trapped LowCardinality(String),
    subject String CODEC(ZSTD(1)),
    keywords String CODEC(ZSTD(1)),
    format LowCardinality(String),
    font_size Array(String),
    font_colors Array(String),
    linewidth Array(String),
    doc_filter String CODEC(ZSTD(1)),
    xref_id Array(String),
    flag_000rg_50 Nullable(Bool),
    flag_000rg_60 Nullable(Bool),
    flag_000rg_70 Nullable(Bool),
    flag_000rg_80 Nullable(Bool),
    flag_000rg_90 Nullable(Bool),
    is_rgb_fraud Nullable(Bool),
    y_cordinates_max_diff Float64,
    tag_hex_fraud Nullable(Bool),
    tag_hex_cnt Int32,
    id_Xf1_fraud Nullable(Bool),
    min_noof_bt_et_grps String CODEC(ZSTD(1)),
    flag_cm Nullable(Bool),
    max_q_front Int32,
    max_q_back Int32,
    max_values_in_btet Int32,
    is_sbi_special_format Nullable(Bool),
    no_of_pages Int16,
    cnt_of_tag_hex_present_pages Int32,
    pattern_scn_fraud Nullable(Bool),
    Td_cnt Int32,
    TD_cnt Int32,
    touchup_textedit_fraud Nullable(Bool),
    td_present_not_tm Nullable(Bool),
    cnt_of_pagefonts_not_equal Int32,
    TM_cnt Int32,
    TJ_cnt Int32,
    list_of_font_pages Array(String),
    Tm_address_not_present_in_all_BT_ET_group Int32,
    cnt_positive_y Int32,
    cnt_negative_y Int32,
    rgb_cnt Int32,
    time_taken Float32,
    non_hex_values_cnt Int32,
    is_pdf_rotated Nullable(Bool),
    colour_codes_in_betet Array(String),
    all_colour_codes Array(String),
    Tj_null_cnt Int32,
    TJ_null_cnt Int32,
    created_at DateTime64,
    updated_at DateTime64,
) ENGINE = S3Queue(
    'https://{AWS_BUCKET_URL}/statement_metadata/*/*',
    JSONEachRow
) SETTINGS mode = 'unordered',
s3queue_enable_logging_to_s3queue_log = 1,
after_processing = 'delete';


CREATE TABLE statementMetadata(
    statement_id UUID,
    bank_name LowCardinality(String),
    author String CODEC(ZSTD(1)),
    producer String CODEC(ZSTD(1)),
    creator String CODEC(ZSTD(1)),
    creation_date Nullable(DateTime64),
    modification_date Nullable(DateTime64),
    pdf_format_creation_date String CODEC(ZSTD(1)),
    pdf_format_modification_date String CODEC(ZSTD(1)),
    fonts Array(String),
    encryption_algo LowCardinality(String),
    trapped LowCardinality(String),
    subject String CODEC(ZSTD(1)),
    keywords String CODEC(ZSTD(1)),
    format LowCardinality(String),
    font_size Array(String),
    font_colors Array(String),
    linewidth Array(String),
    doc_filter String CODEC(ZSTD(1)),
    xref_id Array(String),
    flag_000rg_50 Nullable(Bool),
    flag_000rg_60 Nullable(Bool),
    flag_000rg_70 Nullable(Bool),
    flag_000rg_80 Nullable(Bool),
    flag_000rg_90 Nullable(Bool),
    is_rgb_fraud Nullable(Bool),
    y_cordinates_max_diff Float64,
    tag_hex_fraud Nullable(Bool),
    tag_hex_cnt Int32,
    id_Xf1_fraud Nullable(Bool),
    min_noof_bt_et_grps String CODEC(ZSTD(1)),
    flag_cm Nullable(Bool),
    max_q_front Int32,
    max_q_back Int32,
    max_values_in_btet Int32,
    is_sbi_special_format Nullable(Bool),
    no_of_pages Int16,
    cnt_of_tag_hex_present_pages Int32,
    pattern_scn_fraud Nullable(Bool),
    Td_cnt Int32,
    TD_cnt Int32,
    touchup_textedit_fraud Nullable(Bool),
    td_present_not_tm Nullable(Bool),
    cnt_of_pagefonts_not_equal Int32,
    TM_cnt Int32,
    TJ_cnt Int32,
    list_of_font_pages Array(String),
    Tm_address_not_present_in_all_BT_ET_group Int32,
    cnt_positive_y Int32,
    cnt_negative_y Int32,
    rgb_cnt Int32,
    time_taken Float32,
    non_hex_values_cnt Int32,
    is_pdf_rotated Nullable(Bool),
    colour_codes_in_betet Array(String),
    all_colour_codes Array(String),
    Tj_null_cnt Int32,
    TJ_null_cnt Int32,
    created_at DateTime64,
    updated_at DateTime64,
) 
ENGINE = ReplacingMergeTree PARTITION BY (toYYYYMM(created_at))
ORDER BY (statement_id);


CREATE MATERIALIZED VIEW statementMetadataConsumer TO statementMetadata AS
SELECT *
FROM statementMetadataQueue;